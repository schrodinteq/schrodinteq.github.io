<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Schrodin&#39;s Diary on Quantum Computing and Quantum Programming</title>
    <link>https://schrodinteq.github.io/japanese/</link>
    <description>Recent content on Schrodin&#39;s Diary on Quantum Computing and Quantum Programming</description>
    <generator>Hugo</generator>
    <language>japanese</language>
    <lastBuildDate>Wed, 18 Sep 2024 17:09:54 +0900</lastBuildDate>
    <atom:link href="https://schrodinteq.github.io/japanese/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IBM 量子開発者認定資格 sample問題集の解説 その1</title>
      <link>https://schrodinteq.github.io/japanese/ibmcertsample01ja/</link>
      <pubDate>Wed, 18 Sep 2024 17:09:54 +0900</pubDate>
      <guid>https://schrodinteq.github.io/japanese/ibmcertsample01ja/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://schrodinteq.github.io/japanese/c2q01ja/&#34;&gt;別ページ&lt;/a&gt;で量子コンピュータでは、古典コンピュータとは異なるプログラムである、量子プログラムを実装する必要があると記載しました。ここで、この量子プログラムに関する資格をIBMが2021年から提供しています（早い）。&#xA;&lt;a href=&#34;https://www.ibm.com/training/certification/ibm-certified-associate-developer-quantum-computation-using-qiskit-v02x-C0010300&#34;&gt;https://www.ibm.com/training/certification/ibm-certified-associate-developer-quantum-computation-using-qiskit-v02x-C0010300&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;この資格を取得することでqiskitや量子プログラミングに関する知識を証明することが可能です。&lt;/p&gt;&#xA;&lt;p&gt;この認定を得るためには、上記URLに記載がある通り、“Exam C1000-112: Fundamentals of Quantum Computation Using Qiskit v0.2X Developer”という試験に合格する必要があります。&#xA;IBMはこの試験に関するsample問題集も公開しており、上記URLサイト内の「Sample Test」で公開されています。&#xA;ただ、こちらのSample問題集では解説は特に記載されていないため、なるべく分かりやすく解説を記載します。このページでは1~10問までの解説を記載しています。&lt;br&gt;&#xA;試験対策としては下記のような問題集も是非是非、ご活用ください。&lt;/p&gt;&#xA;&lt;h4 id=&#34;英語版問題集&#34;&gt;英語版問題集&lt;/h4&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.udemy.com/course/ibm-certified-quantum-computation-qiskit-practice-exams/?referralCode=3B3263DF800E05439AD2&#34;&gt;https://www.udemy.com/course/ibm-certified-quantum-computation-qiskit-practice-exams/?referralCode=3B3263DF800E05439AD2&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;　　&lt;/p&gt;&#xA;&lt;h4 id=&#34;日本語版問題集&#34;&gt;日本語版問題集&lt;/h4&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.udemy.com/course/ibm-certified-quantum-computation-qiskit-jp/?referralCode=7D18ADD30A495E12120B&#34;&gt;https://www.udemy.com/course/ibm-certified-quantum-computation-qiskit-jp/?referralCode=7D18ADD30A495E12120B&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;　　&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;問題1&#34;&gt;問題1:&lt;/h2&gt;&#xA;&lt;p&gt;Which statement will create a quantum circuit with four quantum&#xA;bits and four classical bits?&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;選択肢:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;A&lt;/strong&gt;. QuantumCircuit(4, 4)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;B&lt;/strong&gt;. QuantumCircuit(4)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;C&lt;/strong&gt;. QuantumCircuit(QuantumRegister(4, &amp;lsquo;qr0&amp;rsquo;),&#xA;    QuantumRegister(4, &amp;lsquo;cr1&amp;rsquo;))&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;D&lt;/strong&gt;. QuantumCircuit([4, 4])&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;回答:&lt;/strong&gt; A&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;解説:&lt;/strong&gt;&#xA;4つの量子ビット、4つの古典ビットを持つ量子回路を作成しなさいという問題ですね。&#xA;&lt;a href=&#34;https://schrodinteq.github.io/japanese/c2q01ja/&#34;&gt;別ページ&lt;/a&gt;ですでに、量子ビットについては少し解説していますが、量子回路ではよく観測用のビットとして古典ビットも定義することがあります。Qiskitでは下記の様にして量子ビット、古典ビットを定義可能です。この例では変数qcにx個の量子ビット、y個の古典ビットを持つ回路を定義しています。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;qc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; QuantumCircuit(x, y)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;このため、正解はAとなります。他の選択肢について、Bでは量子ビット4つのみが定義され、古典ビットは定義されません。Cでは&lt;code&gt;QuantumRegister&lt;/code&gt;が利用されているため古典ビットが定義されていません。Dは実行するとエラーとなります。&#xA;　　&lt;br&gt;&#xA;　　&lt;br&gt;&#xA;　　&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;問題2&#34;&gt;問題2:&lt;/h2&gt;&#xA;&lt;p&gt;Given this code fragment, what is the probability that a&#xA;measurement would result in |0&amp;gt; ?&lt;/p&gt;</description>
    </item>
    <item>
      <title>量子コンピュータや量子プログラミングとは？</title>
      <link>https://schrodinteq.github.io/japanese/c2q01ja/</link>
      <pubDate>Sun, 28 Jul 2024 10:48:05 +0900</pubDate>
      <guid>https://schrodinteq.github.io/japanese/c2q01ja/</guid>
      <description>&lt;h2 id=&#34;古典コンピュータと量子コンピュータ&#34;&gt;古典コンピュータと量子コンピュータ&lt;/h2&gt;&#xA;&lt;p&gt;近年さらに注目度を集めている量子コンピュータですが、私たちが日常的に使用しているコンピュータとの差異はどこにあるのでしょうか？&lt;/p&gt;&#xA;&lt;p&gt;1番大きな、そして根本的な差異はビットにあります。私たちが日常的に使用しているコンピュータを、古典コンピュータと呼びましょう。古典コンピュータではビットを0か1どちらかの値を持たせることで、処理を行います。量子コンピューターの話をする際、古典コンピュータのビットはよく古典ビットと呼ばれます。&lt;/p&gt;&#xA;&lt;p&gt;私たちが日常的にコンピュータを使用している際、その背後で行われている複雑な処理を意識することはほとんどありません。しかし、ウェブサイトの表示や複雑な計算に至るまで、実際には古典コンピュータが0と1を用いた演算を行うことによって実現されています。ちなみにこの演算処理には、AND、OR、NOTといった論理ゲートを組み合わせた論理回路が用いられています。&lt;/p&gt;&#xA;&lt;p&gt;では次に量子コンピュータです。量子コンピュータでの演算には、古典ビットではなく量子ビットと呼ばれるビットが使用されます。qubit（キュービット）とも呼ばれることもあります。この量子ビットは古典ビットと比べると以下2つの大きな違いを持ちます。&lt;/p&gt;&#xA;&lt;p&gt;・0と1の重ね合わせ状態としてビットを扱える&lt;/p&gt;&#xA;&lt;p&gt;・エンタングルメントを持つ&#xA;　　&lt;/p&gt;&#xA;&lt;p&gt;両方とも古典ビットには無い性質となります。&lt;/p&gt;&#xA;&lt;p&gt;　　&lt;/p&gt;&#xA;&lt;h2 id=&#34;量子コンピュータと量子プログラミング&#34;&gt;量子コンピュータと量子プログラミング&lt;/h2&gt;&#xA;&lt;p&gt;量子コンピュータが注目される理由は、これら量子ビットの性質を活用することで、古典コンピュータでは実現不可能なほど迅速に特定の問題を解決できる可能性があるからです。しかし、この量子ビットの性質を活用しない場合、量子コンピュータでの計算は必ずしも高速になるわけではありません。つまり、古典的なアルゴリズムをそのまま量子コンピュータ上で実行しても、量子ビットの力を引き出すことはできず、量子コンピュータの潜在能力を最大限に引き出すためには量子ビットの特性を活かした「量子回路」を設計し、それに基づく「量子アルゴリズム」を開発することが重要です。&lt;/p&gt;&#xA;&lt;p&gt;量子アルゴリズムの研究は非常に活発に進められており、有名なものとしては例えば、Shorのアルゴリズム（素因数分解）やGroverのアルゴリズム（データベース検索）、量子コンピュータを用いて機械学習を行うVQCなどが発案されております。これらのアルゴリズムは、古典コンピュータでは解決が困難な問題に対して、量子コンピュータの力を活かしてより効率的に回答を提供することが期待されています。&lt;/p&gt;&#xA;&lt;p&gt;現在ではQiskit、Cirq、QulacsなどのSDKを利用することで、量子アルゴリズムや量子回路を誰でも簡単にプログラムとして記述、実行可能です。これが、いわゆる量子プログラミングです。また、これらアルゴリズムを設計、実装する技術者や、これを用いて量子コンピューター用のアプリケーションを実装する技術者は量子技術者としばし呼ばれます。&lt;/p&gt;&#xA;&lt;p&gt;　　&lt;/p&gt;&#xA;&lt;h2 id=&#34;古典コンピュータと量子コンピュータどちらが優れている&#34;&gt;古典コンピュータと量子コンピュータ、どちらが優れている？&lt;/h2&gt;&#xA;&lt;p&gt;よく古典コンピュータと量子コンピュータのどちらが優れているかが議論されますが、まず明確に言えるのは、問題に依存するということです。ある問題に対して、量子ビットや量子アルゴリズムが効果的に活用できる場合、量子コンピュータは古典コンピュータに比べて圧倒的に高速で問題を解決できる可能性があります。&#xA;しかし、すべての問題において量子コンピュータが優れているわけではありません。現状では、古典コンピュータの方が効率的に解ける問題ばかりでしょう。&lt;/p&gt;&#xA;&lt;p&gt;結局、どちらのコンピュータが優れているかは、問題の特性と、それに適したアルゴリズムの選択に大きく依存するのです。&lt;/p&gt;&#xA;&lt;p&gt;　　&lt;/p&gt;&#xA;&lt;h2 id=&#34;ibmの量子技術者認定試験について&#34;&gt;IBMの量子技術者認定試験について&lt;/h2&gt;&#xA;&lt;p&gt;本ブログで紹介したqiskitについての資格試験をIBMが提供しています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.ibm.com/training/certification/ibm-certified-associate-developer-quantum-computation-using-qiskit-v02x-C0010300&#34;&gt;https://www.ibm.com/training/certification/ibm-certified-associate-developer-quantum-computation-using-qiskit-v02x-C0010300&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;この資格を取得することでqiskitや量子プログラミングに関する知識を証明することが可能です。&#xA;こちらの資格取得を目指される方のため、Udemyというサイト上にて日本語版、英語版で問題集を作りました！解説もなるべくわかりやすく作成いたしましたので、是非是非ご活用ください。&lt;/p&gt;&#xA;&lt;h4 id=&#34;英語版問題集&#34;&gt;英語版問題集&lt;/h4&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.udemy.com/course/ibm-certified-quantum-computation-qiskit-practice-exams/?referralCode=3B3263DF800E05439AD2&#34;&gt;https://www.udemy.com/course/ibm-certified-quantum-computation-qiskit-practice-exams/?referralCode=3B3263DF800E05439AD2&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;　　&lt;/p&gt;&#xA;&lt;h4 id=&#34;日本語版問題集&#34;&gt;日本語版問題集&lt;/h4&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.udemy.com/course/ibm-certified-quantum-computation-qiskit-jp/?referralCode=7D18ADD30A495E12120B&#34;&gt;https://www.udemy.com/course/ibm-certified-quantum-computation-qiskit-jp/?referralCode=7D18ADD30A495E12120B&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
